#!/bin/sh
#
### BEGIN INIT INFO
# Provides:        debpool
# Required-Start:  $local_fs $remote_fs
# Required-Stop:   $local_fs $remote_fs
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start Debian package archiver
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=debpool
DAEMON=/usr/bin/$NAME
DEFAULT=/etc/default/$NAME
DESC="Debian package archiver"
test -x $DAEMON || exit 0

. /lib/lsb/init-functions

# Include debpool defaults if available
if [ -f $DEFAULT ]; then
	. $DEFAULT
fi

if [ "$ENABLED" = "0" ]; then
	test "$1" = "start" && echo "Not starting $DESC; disabled in $DEFAULT."
	exit 0
fi

# Run as root if USER not specified
if [ ! $USER ]; then
	USER=root
fi

eval USERHOME=~$USER
if [ "${USERHOME#/}" = "${USERHOME}" ]; then
	echo "$NAME: The user '$USER' specified in $DEFAULT is invalid."
	log_failure_msg "$NAME: The user '$USER' specified in $DEFAULT is invalid."
	exit 1
fi

PIDFILE=$(HOME=$USERHOME debpool --get_lock_path $LOCKPATH) || {
	log_failure_msg "$NAME: could not determine lockfile path."
	exit 1
}

if [ -n "$USER" ]; then
	CHUID="--chuid $USER"
fi

case "$1" in
	start)
		log_daemon_msg "Starting $DESC" "$NAME"
		start-stop-daemon --start --quiet --pidfile $PIDFILE \
			--exec $DAEMON $CHUID -- --daemon $LOGFILE $LOCKPATH $OPTIONS
		log_end_msg $?
		;;
	stop)
		log_daemon_msg "Stopping $DESC" "$NAME"
		start-stop-daemon --stop --quiet --pidfile $PIDFILE \
			--oknodo --name $NAME
		log_end_msg $?
		;;
	force-reload)
		# check wether $DAEMON is running. If so, restart
		start-stop-daemon --stop --test --quiet --pidfile \
			$PIDFILE --name $NAME \
			&& exec $0 restart \
			exit 0
		;;
	restart)
		log_daemon_msg "Restarting $DESC" "$NAME"
		start-stop-daemon --stop --quiet --pidfile $PIDFILE \
			--oknodo --name $NAME
		sleep 1
		start-stop-daemon --start --quiet --pidfile $PIDFILE \
			--exec $DAEMON $CHUID -- --daemon $LOGFILE $LOCKPATH $OPTIONS
		log_end_msg $?
		;;
	*)
		N=/etc/init.d/$NAME
		# echo usage information
		echo "Usage: $N {start|stop|restart|force-reload}" >&2
		exit 2
		;;
esac

exit 0
